From 17b3255adce1d630c9064ad70af1e7a17f8777bf Mon Sep 17 00:00:00 2001
From: Andreas Dinter <andreas.dinter@systec-electronic.com>
Date: Sat, 22 Feb 2025 16:16:32 +0100
Subject: [PATCH] board/ti/am62x/sysworxx.env: Implement bootcmd for rauc

Signed-off-by: Andreas Dinter <andreas.dinter@systec-electronic.com>
---
 board/ti/am62x/sysworxx.env | 68 ++++++++++++++++++++++++++++++++++---
 1 file changed, 64 insertions(+), 4 deletions(-)

diff --git a/board/ti/am62x/sysworxx.env b/board/ti/am62x/sysworxx.env
index abd653e48d3..a1b3f1b5a78 100644
--- a/board/ti/am62x/sysworxx.env
+++ b/board/ti/am62x/sysworxx.env
@@ -19,7 +19,7 @@ name_kern=Image
 console=ttyS2,115200n8
 args_all=setenv optargs ${optargs} earlycon=ns16550a,mmio32,0x02800000 quiet
 args_mmc=
-	setenv bootargs console=${console} ${optargs} root=${root_mmc} rw rootfstype=${mmcrootfstype}
+	setenv bootargs console=${console} ${optargs} root=${root_mmc} ro rootfstype=${mmcrootfstype}
 
 run_kern=booti ${loadaddr} ${rd_spec} ${fdtaddr}
 
@@ -64,16 +64,76 @@ env_import=
 		run env_export;
 	fi;
 	fatload mmc ${mmcdev}:2 0x88080000 uboot.env 0x4000;
-	env import -c 0x88080000 0x4000 name_overlays;
+	env import -c 0x88080000 0x4000 name_overlays BOOT_ORDER BOOT_A_LEFT BOOT_B_LEFT;
 env_export=
-	env export -c -s 0x4000 0x88080000 name_overlays;
+	env export -c -s 0x4000 0x88080000 name_overlays BOOT_ORDER BOOT_A_LEFT BOOT_B_LEFT;
 	fatwrite mmc ${mmcdev}:2 0x88080000 uboot.env 0x4000;
 
 bootcmd_sysworxx=
 	run mmc_detect;
 	run env_import;
 	run findfdt;
-	run bootcmd_ti_mmc;
+	run rauc_boot;
+
+rauc_boot=
+	test -n "${BOOT_ORDER}" || setenv BOOT_ORDER "A B";
+	test -n "${BOOT_A_LEFT}" || setenv BOOT_A_LEFT 3;
+	test -n "${BOOT_B_LEFT}" || setenv BOOT_B_LEFT 3;
+
+	setenv BOOT_SLOT;
+	setenv RAUC_PART;
+
+	echo "Boot order: ${BOOT_ORDER}";
+	echo "Remaining attempts on slot A: ${BOOT_A_LEFT}";
+	echo "Remaining attempts on slot B: ${BOOT_B_LEFT}";
+
+	for SLOT in "${BOOT_ORDER}"; do
+		if test -n "${RAUC_PART}"; then
+			true;
+		elif test "x${SLOT}" = xA; then
+			if test ${BOOT_A_LEFT} -gt 0; then
+				echo "Found valid SLOT A, ${BOOT_A_LEFT} attempts remaining";
+				setexpr BOOT_A_LEFT ${BOOT_A_LEFT} - 1;
+				setenv  BOOT_SLOT $SLOT;
+				setenv  RAUC_PART 5;
+			fi;
+		elif test "x${SLOT}" = xB; then
+			if test ${BOOT_B_LEFT} -gt 0; then
+				echo "Found valid SLOT B, ${BOOT_B_LEFT} attempts remaining";
+				setexpr BOOT_B_LEFT ${BOOT_B_LEFT} - 1;
+				setenv  BOOT_SLOT $SLOT;
+				setenv  RAUC_PART 6;
+			fi;
+		fi;
+	done;
+
+	if test -z "${RAUC_PART}"; then
+		echo "No valid slot found; resetting attempts";
+		setenv BOOT_A_LEFT 3;
+		setenv BOOT_B_LEFT 3;
+		run env_export;
+		reset;
+	fi;
+
+	run env_export;
+
+	run boot_rprocs;
+	setenv bootpart "${mmcdev}:${RAUC_PART}";
+	env set root_mmc "/dev/mmcblk${mmcdev}p${RAUC_PART}";
+	setenv optargs "${optargs} rauc.slot=${BOOT_SLOT}";
+	echo "Using RAUC slot: ${BOOT_SLOT} - ${root_mmc}";
+
+	run args_all;
+	run args_mmc;
+	echo "Loading kernel";
+	run get_kern_mmc;
+	echo "Loading device tree";
+	run get_fdt_mmc;
+	run get_overlay_mmc;
+	echo "Starting kernel";
+	run run_kern;
+
+	reset;
 
 rproc_fw_binaries= 0 /lib/firmware/am62-mcu-m4f0_0-fw
 
-- 
2.49.0

