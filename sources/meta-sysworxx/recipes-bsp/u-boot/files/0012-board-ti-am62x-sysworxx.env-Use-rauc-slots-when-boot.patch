From f46885e07add9d03da3dd9e4c0bcf2046738ffcb Mon Sep 17 00:00:00 2001
From: Andreas Dinter <andreas.dinter@systec-electronic.com>
Date: Fri, 23 Aug 2024 11:03:00 +0200
Subject: [PATCH 12/13] board/ti/am62x/sysworxx.env: Use rauc slots when
 booting from eMMC

Signed-off-by: Andreas Dinter <andreas.dinter@systec-electronic.com>
---
 board/ti/am62x/sysworxx.env       | 85 +++++++++++++++++++++++++++++--
 configs/am625_sysworxx_a53.config |  4 +-
 2 files changed, 84 insertions(+), 5 deletions(-)

diff --git a/board/ti/am62x/sysworxx.env b/board/ti/am62x/sysworxx.env
index ecdfdec1fdd..7fdc9c79b1f 100644
--- a/board/ti/am62x/sysworxx.env
+++ b/board/ti/am62x/sysworxx.env
@@ -18,7 +18,9 @@ findfdt=
 name_kern=Image
 console=ttyS2,115200n8
 args_all=setenv optargs ${optargs} earlycon=ns16550a,mmio32,0x02800000
-	${mtdparts}
+args_mmc=
+	setenv bootargs console=${console} ${optargs} root=${root_mmc} ${root_rw} rootfstype=${mmcrootfstype}
+
 run_kern=booti ${loadaddr} ${rd_spec} ${fdtaddr}
 
 boot_targets=mmc1 mmc0 usb pxe dhcp
@@ -46,13 +48,88 @@ eeprom_export=
 	i2c write 0x88080100 0x51 0x0.1 0x100;
 	echo "vendor data exported"
 
-mmc_detect=
+bootcmd_sysworxx=
+	run findfdt;
+	run rauc_boot;
+
+rauc_import_env=
+	read mmc 0:2 0x88080000 0 32;
+	env import -c 0x88080000 0x4000 BOOT_ORDER BOOT_A_LEFT BOOT_B_LEFT;
+	test -n "${BOOT_ORDER}" || setenv BOOT_ORDER "A B";
+	test -n "${BOOT_A_LEFT}" || setenv BOOT_A_LEFT 3;
+	test -n "${BOOT_B_LEFT}" || setenv BOOT_B_LEFT 3;
+
+rauc_export_env=
+	env export -c -s 0x4000 0x88080000 BOOT_ORDER BOOT_A_LEFT BOOT_B_LEFT;
+	write mmc 0:2 0x88080000 0 32;
+
+rauc_boot=
 	mmc dev ${mmcdev};
+
 	if test ${mmcdev} -eq 1; then
+		echo "Boot from SD card";
 		env set bootpart 1:2;
+		env set root_mmc "/dev/mmcblk${mmcdev}p2";
+		env set root_rw  "rw";
 	else
-		env set bootpart 0:1;
-	fi
+		echo "Boot from eMMC";
+		run rauc_import_env;
+
+		setenv BOOT_SLOT;
+		setenv RAUC_PART;
+
+		echo "Boot order: ${BOOT_ORDER}";
+		echo "Remaining attempts on slot A: ${BOOT_A_LEFT}";
+		echo "Remaining attempts on slot B: ${BOOT_B_LEFT}";
+
+		for SLOT in "${BOOT_ORDER}"; do
+			if test -n "${RAUC_PART}"; then
+				true;
+			elif test "x${SLOT}" = xA; then
+				if test ${BOOT_A_LEFT} -gt 0; then
+					echo "Found valid SLOT A, ${BOOT_A_LEFT} attempts remaining";
+					setexpr BOOT_A_LEFT ${BOOT_A_LEFT} - 1;
+					setenv  BOOT_SLOT $SLOT;
+					setenv  RAUC_PART 3;
+				fi;
+			elif test "x${SLOT}" = xB; then
+				if test ${BOOT_B_LEFT} -gt 0; then
+					echo "Found valid SLOT B, ${BOOT_B_LEFT} attempts remaining";
+					setexpr BOOT_B_LEFT ${BOOT_B_LEFT} - 1;
+					setenv  BOOT_SLOT $SLOT;
+					setenv  RAUC_PART 4;
+				fi;
+			fi;
+		done;
+
+		if test -z "${RAUC_PART}"; then
+			echo "No valid slot found; resetting attempts";
+			setenv BOOT_A_LEFT 3;
+			setenv BOOT_B_LEFT 3;
+			run rauc_export_env;
+			reset;
+		fi;
+
+		run rauc_export_env;
+
+		run boot_rprocs;
+		setenv bootpart "0:${RAUC_PART}";
+		env set root_mmc "/dev/mmcblk${mmcdev}p${RAUC_PART}";
+		env set root_rw  "ro";
+		setenv optargs "${optargs} rauc.slot=${BOOT_SLOT}";
+		echo "Boot from eMMC card (${BOOT_SLOT})";
+	fi;
+
+	run args_all;
+	run args_mmc;
+	echo "Loading kernel";
+	run get_kern_mmc;
+	echo "Loading device tree";
+	run get_fdt_mmc;
+	echo "Starting kernel";
+	run run_kern;
+
+	reset;
 
 rproc_fw_binaries= 0 /lib/firmware/am62-mcu-m4f0_0-fw
 
diff --git a/configs/am625_sysworxx_a53.config b/configs/am625_sysworxx_a53.config
index babe2e8bc12..178c53e2f61 100644
--- a/configs/am625_sysworxx_a53.config
+++ b/configs/am625_sysworxx_a53.config
@@ -2,4 +2,6 @@
 
 CONFIG_TARGET_SYSWORXX_AM62X_ADOPT=y
 CONFIG_ENV_SOURCE_FILE="sysworxx"
-CONFIG_BOOTCOMMAND="run mmc_detect; run distro_bootcmd;"
+CONFIG_BOOTCOMMAND="run bootcmd_sysworxx;"
+CONFIG_CMD_READ=y
+CONFIG_CMD_WRITE=y
-- 
2.47.0

